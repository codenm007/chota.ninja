{"version":3,"sources":["store/calendar.js","store/events.js","components/calendar.js","components/home.js","assets/loader.gif","App.js","store/index.js","index.js"],"names":["initial_day","start_date","Date","toISOString","day_slice","createSlice","name","initialState","reducers","update_date","state","action","payload","prev_week","today","getFullYear","getMonth","getDate","next_week","day_actions","actions","prev_todos","JSON","parse","localStorage","getItem","console","log","initial_data","id","created_at","description","is_completed","start_event","events_slice","add_event","push","mark_as_done","index","remove_event","splice","event_actions","prototype","getWeek","this","setDate","getDay","concat","String","Array","split","map","sameDay","d1","d2","week_arr","Calendar","dispatch","useDispatch","day","useSelector","event_arr","events","setItem","stringify","useState","show_table","set_show_table","Todo_date","setTodo_date","todo_description","set_todo_description","useEffect","date","week","days","current_week","j","day_name","time","getTime","day_check","date_ins","get_week_details","handle_mark_as_done","findIndex","obj","cogoToast","info","className","day_class_name","date_class_name","style","marginLeft","marginBottom","k","arr2","backgroundColor","onClick","overflow","textOverflow","width","color","size","warn","handle_remove_todo","type","data-bs-toggle","data-bs-target","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","placeholder","onChange","event","target","value","selected","minDate","showDisabledMonthNavigation","length","uuidv4","success","error","add_a_task","Home","href","InputGroup","FormControl","aria-describedby","Button","variant","App","exact","path","store","configureStore","reducer","axios","defaults","baseURL","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edf5cc01.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\n\nconst initial_day = {\n    start_date:new Date().toISOString()\n}\n\n//console.log(initial_day);\n\n\nconst day_slice = createSlice({\n    name:'day',\n    initialState:initial_day,\n    reducers:{\n        update_date(state,action){\n            state.start_date = action.payload;\n        },\n        prev_week(state){\n            const today = new Date(state.start_date);\n            state.start_date=new Date(today.getFullYear(), today.getMonth(), today.getDate()-7).toISOString();\n            //console.log('inside reducer',state.start_date , 'today' , today);\n        },\n        next_week(state){\n            const today =new Date(state.start_date);\n            state.start_date=new Date(today.getFullYear(), today.getMonth(), today.getDate()+7).toISOString();\n            //console.log('inside reducer',state.start_date , 'today' , today);\n        }\n    }\n});\n\nexport default day_slice.reducer;\nexport const day_actions = day_slice.actions;\n","import {createSlice} from '@reduxjs/toolkit';\n\nlet prev_todos = JSON.parse(localStorage.getItem(\"todos\"));\n\nconsole.log(prev_todos,\"prev_todos\")\n\nlet initial_data = [{\n    id:\"asda88dsdsa\",\n    created_at:new Date().toISOString(),\n    description:'Demo_Task 1',\n    is_completed:false\n},\n{\n    id:\"asdasssdsdsa\",\n    created_at:new Date().toISOString(),\n    description:'Demo_Task 2',\n    is_completed:false\n},\n{\n    id:\"asdasssdsd333sa\",\n    created_at:\"2021-05-12T14:03:53.495Z\",\n    description:'Demo_Task previous scheduled 2',\n    is_completed:false\n}];\n\nlet start_event = [];\n\nif(prev_todos){ //cookie present so loading data from it \n    start_event = prev_todos;\n}\nif(!prev_todos){ // app loads for first time or cookie cleared\n    start_event = initial_data;\n}\n\n\n\n\nconst events_slice = createSlice({\n    name:'day',\n    initialState:start_event,\n    reducers:{\n        add_event(state,{payload}){\n            state.push(payload);\n        },\n        mark_as_done(state,{payload:index}){\n            state[index].is_completed = !state[index].is_completed;\n        },\n        remove_event(state,{payload:index}){\n            state.splice(index, 1);\n        }\n    }\n});\n\nexport default events_slice.reducer;\nexport const event_actions = events_slice.actions;\n","import \"./calendar.css\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { day_actions } from \"../store/calendar\";\nimport { event_actions } from \"../store/events\";\nimport {\n  CheckCircle,\n  Trash,\n  SkipBackwardCircle,\n  SkipForwardCircle,\n} from \"react-bootstrap-icons\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport cogoToast from \"cogo-toast\";\n\n//function that returns a week\nDate.prototype.getWeek = function () {\n  return [new Date(this.setDate(this.getDate() - this.getDay()))].concat(\n    String(Array(6))\n      .split(\",\")\n      .map(function () {\n        return new Date(this.setDate(this.getDate() + 1));\n      }, this)\n  );\n};\n\n//function to check same day\nconst sameDay = (d1, d2) => {\n  //console.log(d1,d2);\n  return (\n    d1.getFullYear() === d2.getFullYear() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getDate() === d2.getDate()\n  );\n};\n\n// function which give us the weekly dates with appropiate classes\nlet get_week_details = (date) => {\n  let week = new Date(new Date(date).toISOString()).getWeek();\n\n  let days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n  let current_week = [];\n\n  week.map((j) => {\n    //console.log(days[new Date(curr.setDate(i)).getDay()]);\n    let day_name = days[new Date(j).getDay()];\n    let day = new Date(j);\n    let time = day.getTime();\n    let date = day.getDate();\n\n    let day_check = \"prev\";\n    //console.log(time , \"time\")\n    // console.log(\"today check\",new Date(),day);\n    if (sameDay(new Date(), day)) {\n      day_check = \"today\";\n    }\n    if (new Date().getTime() < time) {\n      day_check = \"next\";\n    }\n    current_week.push({\n      date_ins: day,\n      day: day_name,\n      date: date,\n      day_check: day_check,\n    });\n  });\n\n  return current_week;\n};\n\nlet week_arr = [];\n\n//console.log(current_week, 22);\n\nconst Calendar = () => {\n  const dispatch = useDispatch();\n  const day = useSelector((state) => state.day.start_date);\n  const event_arr = useSelector((state) => state.events);\n  //saving todos in local storage\n  localStorage.setItem(\"todos\",JSON.stringify(event_arr));\n  //console.log(event_arr);\n  const [show_table, set_show_table] = useState(false);\n  const [Todo_date, setTodo_date] = useState(new Date());\n  const [todo_description, set_todo_description] = useState(\"\");\n\n  useEffect(() => {\n    week_arr = get_week_details(day);\n    //console.log(week_arr, 34, day);\n    set_show_table(true);\n  }, [show_table]);\n\n  let handle_prev_week = () => {\n    dispatch(day_actions.prev_week());\n    set_show_table(false);\n    //console.log(new Date(day), \"after coming to component\");\n  };\n  let handle_next_week = () => {\n    dispatch(day_actions.next_week());\n    set_show_table(false);\n    //console.log(new Date(day), \"after coming to component\");\n  };\n\n  let handle_mark_as_done = (id) => {\n    let index = event_arr.findIndex((obj) => obj.id == id);\n    //console.log(index,id);\n    dispatch(event_actions.mark_as_done(index));\n    cogoToast.info(\"Yaah ! Task status change successfully !\");\n    set_show_table(false);\n  };\n\n  let handle_remove_todo = (id) => {\n    let index = event_arr.findIndex((obj) => obj.id == id);\n    //console.log(index,id);\n    dispatch(event_actions.remove_event(index));\n    cogoToast.warn(\" Task removed successfully !\");\n    set_show_table(false);\n  };\n\n  let handle_add_todo = () => {\n    //console.log(new Date(Todo_date).toISOString(),todo_description);\n    if (todo_description.length !== 0) {\n      dispatch(\n        event_actions.add_event({\n          id: uuidv4(),\n          created_at: new Date(Todo_date).toISOString(),\n          description: todo_description,\n          is_completed: false,\n        })\n      );\n      cogoToast.success(\"Yaah ! Task added successfully !\");\n      set_show_table(false);\n\n    } else {\n      cogoToast.error(\"No task added due to empty description!\");\n    }\n  };\n\n  //day_sorter(day);\n\n  //console.log(sat);\n\n  return (\n    <div className=\"container my-4 \">\n      {show_table && (\n        <div className=\"row\">\n          {week_arr.map((j) => {\n            let day_class_name = \"day_name ml-2\";\n\n            let date_class_name = \"prev_date\";\n\n            if (j.day_check === \"today\") {\n              day_class_name = \"today_day_name\";\n              date_class_name = \"today_date\";\n            }\n            if (j.day_check === \"next\") {\n              date_class_name = \"next_date\";\n            }\n            // function to add a task where needed\n            const add_a_task = () => {\n              if (j.day_check !== \"prev\") {\n                return (\n                  <td>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-warning\"\n                      data-bs-toggle=\"modal\"\n                      style = {{width:\"100%\"}}\n                      data-bs-target=\"#staticBackdrop\"\n                      onClick={() => set_todo_description(\"\")}\n                    >\n                      Add Item\n                    </button>\n\n                    <div\n                      className=\"modal fade\"\n                      id=\"staticBackdrop\"\n                      data-bs-backdrop=\"static\"\n                      data-bs-keyboard=\"false\"\n                      tabIndex=\"-1\"\n                      aria-labelledby=\"staticBackdropLabel\"\n                      aria-hidden=\"true\"\n                    >\n                      <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                          <div className=\"modal-header\">\n                            <h5\n                              className=\"modal-title\"\n                              id=\"staticBackdropLabel\"\n                            >\n                              ADD TASK\n                            </h5>\n                            <button\n                              type=\"button\"\n                              className=\"btn-close\"\n                              data-bs-dismiss=\"modal\"\n                              aria-label=\"Close\"\n                            ></button>\n                          </div>\n                          <div className=\"modal-body\">\n                            <label className=\"form-label\">\n                              Task Description\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Work To Do\"\n                              onChange={(event) =>\n                                set_todo_description(event.target.value)\n                              }\n                            />\n                            <div className=\"my-3\">\n                              <label className=\"mx-3\">\n                                {\" \"}\n                                Please select Todo Date:{\" \"}\n                              </label>\n                              <DatePicker\n                                selected={Todo_date}\n                                onChange={(date) => setTodo_date(date)}\n                                minDate={new Date()}\n                                showDisabledMonthNavigation\n                              />\n                            </div>\n                          </div>\n                          <div className=\"modal-footer\">\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-secondary\"\n                              data-bs-dismiss=\"modal\"\n                            >\n                              Close\n                            </button>\n                            <button\n                              type=\"button\"\n                              data-bs-dismiss=\"modal\"\n                              className=\"btn btn-primary\"\n                              onClick={() => {\n                                handle_add_todo();\n                              }}\n                            >\n                              Add Task\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                );\n              }\n            };\n\n            return (\n              <div className=\"col\">\n                <table>\n                  <tr>\n                    <td>\n                      <div className=\"card border border-primary\">\n                        <div className=\"card-body\">\n                          <div\n                            className={day_class_name}\n                            style={{\n                              marginLeft: \"50px\",\n                              marginBottom: \"1rem\",\n\n                            }}\n                          >\n                            {\" \"}\n                            {j.day}{\" \"}\n                          </div>\n                          <span\n                            className={date_class_name}\n                            style={{ marginLeft: \"50px\" }}\n                          >\n                            {\" \"}\n                            {j.date}\n                          </span>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </table>\n                {event_arr.map((k) => {\n                  //checking events that are on the same day\n                  if (sameDay(new Date(j.date_ins), new Date(k.created_at))) {\n                    let arr2 = [];\n\n                    if (k.is_completed) {\n                      arr2.push(\n                        <tr>\n                          <td>\n                            <div className = \"card\" style = {{backgroundColor:\"green\"}}  id={k.id}\n                              onClick={() => {\n                                handle_mark_as_done(k.id);\n                              }}>\n                              <div className=\"card-body\">\n                           \n                              <p style={{  overflow: \"hidden\",textOverflow: \"ellipsis\", width: \"100px\" ,color:\"white\"}}>{k.description}</p>\n                           \n                              </div></div>\n    \n                          </td>\n                        </tr>\n                      );\n                    } else {\n                      arr2.push(\n                        <tr>\n                          <td>\n                            <div className=\"row justify-content-center my-2\">\n                              <div className=\"card\">\n                                <div className=\"card-body\">\n                                <p style={{  overflow: \"hidden\",textOverflow: \"ellipsis\", width: \"100px\" }}>{k.description}</p>\n\n                                  <div className=\"d-flex justify-content-center row\">\n                                    <div className=\"col-12 col-md-6\"  id={k.id} onClick={() => {handle_mark_as_done(k.id);}}>\n                                      <CheckCircle\n                                        color=\"green\"\n                                        size=\"1.4rem\"\n                                      >\n                                        {\" \"}\n                                      </CheckCircle>\n                                    </div>\n                                    \n                                                                          \n                                    <div \n                                    id={k.id}\n                                    className=\"col-12 col-md-6\"  \n                                    onClick={() => {\n                                      handle_remove_todo(k.id);\n                                    }}\n                                    >\n                                      <Trash\n                                        color=\"red\"\n                                        size=\"1.4rem\"\n                                      >\n                                        {\" \"}\n                                      </Trash>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      );\n                    }\n                    return <table>{arr2}</table>;\n                  }\n                })}\n                <table>\n                  <tr>{add_a_task()}</tr>\n                  <tr>\n                    <td> &nbsp; &nbsp; &nbsp; &nbsp;</td>\n                  </tr>\n                </table>\n              </div>\n            );\n          })}\n        </div>\n      )}\n\n      <div className=\"row \">\n        <div className=\"col d-flex justify-content-end\">\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => handle_prev_week()}\n          >\n            {\" \"}\n            <SkipBackwardCircle\n              color=\"white\"\n              size=\"1.4rem\"\n            ></SkipBackwardCircle>\n          </button>\n        </div>\n\n        <div className=\"col  d-flex justify-content-start\">\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => handle_next_week()}\n          >\n            {\" \"}\n            <SkipForwardCircle color=\"white\" size=\"1.4rem\"></SkipForwardCircle>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n","import { InputGroup , FormControl,Button} from 'react-bootstrap';\n\nconst Home = () => {\n    return (\n     <>\n        <div>\n          <nav className=\"navbar navbar-dark bg-dark\">\n            <div className=\"container-fluid\">\n              <a className=\"navbar-brand\" href=\"#\">\n                Awesome Todo App\n              </a>\n            </div>\n          </nav>\n        </div>\n        <div>\n        <InputGroup className=\"mb-3\">\n    <FormControl\n      placeholder=\"Recipient's username\"\n      aria-label=\"Recipient's username\"\n      aria-describedby=\"basic-addon2\"\n    />\n    <Button variant=\"outline-secondary\" id=\"button-addon2\">\n      Button\n    </Button>\n  </InputGroup>\n        </div>\n        </>\n    );\n  };\n  \n  export default Home;\n  ","export default __webpack_public_path__ + \"static/media/loader.ece48b52.gif\";","import { Fragment } from 'react';\nimport {useSelector} from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Header from './components/header';\nimport Calendar from './components/calendar';\nimport Home from './components/home';\nimport Redirect from './components/redirect';\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/calendar\">Calendar</Link>\n            </li>\n          </ul>\n        </nav> */}\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/calendar\">\n            <Calendar />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          {/* <Route  path=\"/\">\n            <Redirect />\n          </Route> */}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import {configureStore} from '@reduxjs/toolkit';\n\n// import counter_reducer from './counter';\n\n import day_slice from './calendar.js';\n import events_slice from './events.js';\n\nconst store = configureStore({\n    reducer:{day:day_slice,events:events_slice}\n});\n\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport axios from \"axios\";\n\nimport './index.css';\nimport App from './App';\n//importing our redux store\nimport store from \"./store/index\";\naxios.defaults.baseURL = \"http://localhost:8081/\";\nReactDOM.render(\n <Provider store = {store}> \n<App />\n </Provider>, \n \n document.getElementById('root')\n );\n"],"sourceRoot":""}